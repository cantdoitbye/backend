services:
  hey_backend:
    build: .
    container_name: django_backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app

    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - minio
      - neo4j
    networks:
      - backend-network

  db:
    image: postgres
    container_name: postgres_db
    environment:
      POSTGRES_PASSWORD: ooumphdatavault003
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend-network

  redis:
    image: redis
    container_name: redis_cache
    command: redis-server --requirepass ooumphmemoriDB003
    environment:
      REDIS_PASSWORD: ooumphmemoriDB003
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data  # ✅ Use Docker volume instead
    networks:
      - backend-network

  minio:
    image: quay.io/minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: ooumphmedia
      MINIO_ROOT_PASSWORD: ooumphMedia001
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data  # ✅ Use Docker volume instead
    networks:
      - backend-network

  neo4j:
    image: neo4j
    container_name: neo4j_db
    environment:
      NEO4J_AUTH: neo4j/7bL7sXcgNBNQU25
      NEO4J_dbms_security_procedures_unrestricted: dbms.security.procedures.unrestricted
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data  # ✅ Use Docker volume instead
    networks:
      - backend-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ooumph.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - backend-network
    depends_on:
      - db

volumes:
  pgdata:
  redis_data:    
  minio_data:    
  neo4j_data:    
  pgadmin_data:

networks:
  backend-network:
    driver: bridge